name: backend

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  IMAGE_NAMESPACE: 'dalbitresb12'
  IMAGE_NAME: 'medicai-backend'

jobs:
  lint:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version-file: '.python-version'
      - name: Install the project
        run: uv sync --locked --all-extras --dev
      - name: Lint project
        run: uv run ruff check
  build-docker:
    runs-on: ubuntu-latest
    needs: lint
    permissions:
      contents: read
      actions: read
      packages: write
    steps:
      - name: Get repository name
        id: repo
        run: echo "name=$(echo "${{ github.repository }}" | cut -d'/' -f2)" >> "$GITHUB_OUTPUT"
      - name: Create image metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ env.IMAGE_NAMESPACE }}/${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
          flavor: |
            latest=auto
          labels: |
            org.opencontainers.image.title=${{ env.IMAGE_NAME }}
            org.opencontainers.image.authors=${{ github.repository_owner }}
            org.opencontainers.image.description=See more at https://github.com/${{ github.repository }}#readme.
            org.opencontainers.image.documentation=https://github.com/${{ github.repository }}#readme
            org.opencontainers.image.url=https://github.com/${{ github.repository }}#readme
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          context: backend
          file: backend/Dockerfile
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
  deploy:
    runs-on: ubuntu-latest
    needs: build-docker
    environment: production
    permissions:
      contents: read
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    steps:
      - name: Deploy to server
        uses: appleboy/ssh-action@v1
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd app
            git checkout main
            git pull origin main
            docker compose pull app
            docker compose up -d app
